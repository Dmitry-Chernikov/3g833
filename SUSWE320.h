#pragma once

#include <Arduino.h>

enum class Model {
  MODEL_0_4,
  MODEL_0_75,
  MODEL_1_5,
  MODEL_2_2,
  MODEL_3_0,
  MODEL_4_0,
  MODEL_5_5,
  MODEL_7_5,
  MODEL_11_0,
  MODEL_COUNT // Используем для определения размера массива
};

// Массив мощностей для каждой модели
const float modelPowers[] = {
    0.4,  // MODEL_0_4
    0.75, // MODEL_0_75
    1.5,  // MODEL_1_5
    2.2,  // MODEL_2_2
    3.0,  // MODEL_3_0
    4.0,  // MODEL_4_0
    5.5,  // MODEL_5_5
    7.5,  // MODEL_7_5
    11.0  // MODEL_11_0
};

/**
 * @enum GroupsParameter
 * @brief Данные параметров содержат важные параметры привода переменного тока.
 */
enum GroupsParameter {
  GROUP_F0 = 0, // Основные рабочие параметры
  GROUP_F1,     // Параметры управления V/F
  GROUP_F2,     // Параметры векторного управления V
  GROUP_F3,     // Вспомогательные эксплуатационные параметры 1
  GROUP_F4,     // Вспомогательные эксплуатационные параметры 2
  GROUP_F5,     // Параметры цифровых фходов выходов
  GROUP_F6,     // Аналоговые входные и выходные функции
  GROUP_F7,     // Параметры запуска программы (ПЛК)
  GROUP_F8,     // Параметры PID регулятора
  GROUP_F9,     // Параметры мотора
  GROUP_FA,     // Параметры защиты
  GROUP_FB,     // Параметры дисплея и специальные
  GROUP_FC,     // Парамтеры комуникации RS485
  GROUP_FP,     // Заводские параметры
  GROUP_d,      // Параметры мониторинга
  GROUP_COUNT   // Количество групп
};

// Cтруктура задаёт каркас для хранения информации об ошибках 
struct FaultInfo {
    //int code;             // Код ошибки будет равен индексу массива
    const char* name;       // Название ошибки
    const char* causes;     // Возможные причины
    const char* solution;   // Решение
};

// Определение union для хранения различных типов значений
union ParameterValue {
  float floatValue;        // Для хранения значений с плавающей точкой
  int intValue;            // Для хранения целых значений
  const char *stringValue; // Для хранения строковых значений
};

// Cтруктура Parameter
struct Parameter {
  const char *name;              // Название параметра
  ParameterValue factoryDefault; // Значение по умолчанию
  const char *unit;              // Единица измерения
  ParameterValue minSetting;     // Минимальное значение диапазона
  ParameterValue maxSetting;     // Максимальное значение диапазона
  const char *description;       // Описание параметра
};

class ParameterGroup {
public:
  ParameterGroup(const char *groupName, int maxParameters = 10) : groupName(groupName), maxParameters(maxParameters), parameterCount(0) { parameters = new Parameter[maxParameters]; }

  ~ParameterGroup() {
    delete[] parameters; // Освобождение памяти
  }

  void addParametr(const Parameter &param);

private:
  const char *groupName; // Название группы параметров
  const int maxParameters; // Максимальное количество параметров в группе, по умолчанию 10 в конструкторе класса
  Parameter *parameters; // Массив параметров
  int parameterCount;    // Количество добавленных параметров
};

class ParametersSUSWE320 {
public:
  ParametersSUSWE320(Model model); 
  float getPower(Model model);      // Функция для получения мощности модели
  const FaultInfo* getFaultInfo(int code); // Функция возвращает указатель на информацию об ошибке по её коду

private:
  ParameterGroup allParameters[GroupsParameter::GROUP_COUNT]; // Массив групп параметров
  Model model;                      // Хранит значение модели  

  static const int faultCount = 27; // Общее количество кодов ошибок
  FaultInfo faultTable[faultCount] = {
      { "OU1 (1)", "Перенапряжение во время разгона", "Ненормальное входное напряжение", "Проверьте входное питание" },
      { "OU2 (2)", "Перенапряжение во время торможения", "Время торможения слишком короткое", "Увеличьте время торможения" },
      { "OU3 (3)", "Перенапряжение на постоянной скорости", "Ненормальное входное напряжение", "Проверьте входное питание" },
      { "OCC1 (4)", "Аппаратный перегрузка тока во время разгона", "Мощность привода переменного тока низкая", "Выберите привод переменного тока с большей мощностью" },
      { "OCC2 (5)", "Аппаратный перегрузка тока во время торможения", "Низкая мощность привода переменного тока", "Выберите привод переменного тока с большей мощностью" },
      { "OCC3 (6)", "Аппаратный перегрузка тока на постоянной скорости", "Низкая мощность привода переменного тока", "Выберите привод переменного тока с большей мощностью" },
      { "OCS1 (7)", "Программная перегрузка тока во время разгона", "Низкая мощность привода переменного тока", "Выберите привод переменного тока с большей мощностью" },
      { "OCS2 (8)", "Программная перегрузка тока во время торможения", "Время торможения слишком короткое", "Увеличьте время торможения" },
      { "OCS3 (9)", "Программная перегрузка тока на постоянной скорости", "Ненормальное входное напряжение", "Проверьте входное питание" },
      { "EFO (10)", "Модуль отключения питания", "Ненормальное входное напряжение", "Проверьте входное напряжение" },
      { "OU (11)", "Перенапряжение при остановке", "Ненормальное входное напряжение", "Проверьте входное напряжение" },
      { "OU3 (12)", "Перенапряжение на постоянной скорости", "Слишком высокое напряжение питания", "Проверьте, не слишком ли высокое напряжение питания" },
      { "LU (13)", "Недостаточное напряжение", "Ненормальное входное напряжение", "Проверьте напряжение питания" },
      { "OH (14)", "Перегрев", "Слишком высокая температура окружающей среды", "Улучшите условия окружающей среды" },
      { "OL1 (15)", "Перегрузка привода переменного тока", "Перегрузка двигателя", "Проверьте нагрузку" },
      { "OL2 (16)", "Перегрев", "Слишком высокая температура окружающей среды", "Улучшите условия окружающей среды" },
      { "BIAS (17)", "Ошибка смещения тока", "Аппаратный сбой", "Обратитесь к поставщику за обслуживанием" },
      { "CBC (18)", "Ошибка ограничения тока по волнам", "Низкая мощность привода переменного тока", "Выберите привод переменного тока с большей мощностью" },
      { "FBL (19)", "Обратная связь PID ниже нижнего предела", "Линия обратной связи PID ослаблена", "Проверьте соединение обратной связи" },
      { "FBH (20)", "Обратная связь PID выше верхнего предела", "Проверьте соединение обратной связи", "Проверьте соединение обратной связи" },
      { "EEEP (21)", "Ошибка чтения и записи EEPROM", "Ошибка EEPROM", "Обратитесь к поставщику за обслуживанием" },
      { "CE (22)", "Ошибка связи между двойными ЦП", "Ошибка связи ЦП", "Обратитесь к поставщику за обслуживанием" },
      { "EF (23)", "Внешняя ошибка", "Входной терминал внешнего устройства закрыт", "Отключите входной терминал внешнего устройства и устраните неисправность" },
      { "EPA (24)", "Ошибка настройки параметров", "", "" },
      { "E485 (25)", "Ошибка разъединения связи", "Проверьте, не аномально ли соединение линии связи и правильность последовательности линии.", "" },
      { "SFOC (27)", "Программная перегрузка тока", "Настройте время разгона/торможения; если параметры двигателя не совпадают, перенастройте параметры.", "" },
  };
};